{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Transform": "AWS::Serverless-2016-10-31",
  "Description": "Minimalist TODO Application Frontend Infra",
  "Parameters": {
    "Environment": {
      "Type": "String",
      "Default": "dev",
      "AllowedValues": ["dev", "stage", "prod"],
      "Description": "Deployment environment"
    }
  },
  "Conditions": {
    "IsProduction": {
      "Fn::Not": [{ "Fn::Equals": [{ "Ref": "Environment" }, "dev"] }]
    }
  },
  "Resources": {
    "FrontendBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "WebsiteConfiguration": {
          "IndexDocument": "index.html",
          "ErrorDocument": "index.html"
        },
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedOrigins": ["*"],
              "AllowedMethods": ["GET", "HEAD"],
              "AllowedHeaders": ["*"],
              "MaxAge": 3600
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "IgnorePublicAcls": true,
          "BlockPublicPolicy": { "Fn::If": ["IsProduction", true, false] },
          "RestrictPublicBuckets": { "Fn::If": ["IsProduction", true, false] }
        },
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": { "SSEAlgorithm": "AES256" }
            }
          ]
        }
      }
    },
    "FrontendBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": { "Ref": "FrontendBucket" },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Fn::If": [
                  "IsProduction",
                  { "Service": "cloudfront.amazonaws.com" },
                  "*"
                ]
              },
              "Action": "s3:GetObject",
              "Resource": { "Fn::Sub": "arn:aws:s3:::${FrontendBucket}/*" },
              "Condition": {
                "Fn::If": [
                  "IsProduction",
                  {
                    "StringEquals": {
                      "AWS:SourceArn": {
                        "Fn::Sub": "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}"
                      }
                    }
                  },
                  { "Ref": "AWS::NoValue" }
                ]
              }
            }
          ]
        }
      }
    },
    "CloudFrontLoggingBucket": {
      "Type": "AWS::S3::Bucket",
      "Condition": "IsProduction",
      "Properties": {
        "LifecycleConfiguration": {
          "Rules": [
            {
              "Id": "ExpireOldLogs",
              "Status": "Enabled",
              "Transitions": [
                {
                  "Days": 30,
                  "StorageClass": "STANDARD_IA"
                },
                {
                  "Days": 90,
                  "StorageClass": "GLACIER"
                }
              ],
              "ExpirationInDays": 365,
              "Prefix": "frontend/"
            }
          ]
        }
      }
    },
    "CloudFrontOAC": {
      "Type": "AWS::CloudFront::OriginAccessControl",
      "Condition": "IsProduction",
      "Properties": {
        "OriginAccessControlConfig": {
          "SigningBehavior": "always",
          "SigningProtocol": "sigv4",
          "OriginAccessControlOriginType": "s3"
        }
      }
    },
    "SecurityHeadersPolicy": {
      "Type": "AWS::CloudFront::ResponseHeadersPolicy",
      "Condition": "IsProduction",
      "Properties": {
        "ResponseHeadersPolicyConfig": {
          "Name": { "Fn::Sub": "${AWS::StackName}-security-headers" },
          "SecurityHeadersConfig": {
            "StrictTransportSecurity": {
              "AccessControlMaxAgeSec": 31536000,
              "IncludeSubdomains": true
            },
            "ContentTypeOptions": { "Override": true },
            "FrameOptions": { "FrameOption": "DENY", "Override": true },
            "ReferrerPolicy": {
              "ReferrerPolicy": "strict-origin-when-cross-origin",
              "Override": true
            }
          }
        }
      }
    },
    "CloudFrontDistribution": {
      "Type": "AWS::CloudFront::Distribution",
      "Condition": "IsProduction",
      "Properties": {
        "DistributionConfig": {
          "Enabled": true,
          "DefaultRootObject": "index.html",
          "Origins": [
            {
              "Id": "S3Origin",
              "DomainName": {
                "Fn::Sub": "${FrontendBucket}.s3.${AWS::Region}.amazonaws.com"
              },
              "S3OriginConfig": { "OriginAccessIdentity": "" },
              "OriginAccessControlId": { "Fn::GetAtt": ["CloudFrontOAC", "Id"] }
            }
          ],
          "DefaultCacheBehavior": {
            "TargetOriginId": "S3Origin",
            "ViewerProtocolPolicy": "redirect-to-https",
            "AllowedMethods": ["GET", "HEAD", "OPTIONS"],
            "CachedMethods": ["GET", "HEAD", "OPTIONS"],
            "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
            "ResponseHeadersPolicyId": { "Ref": "SecurityHeadersPolicy" },
            "Compress": true
          },
          "CustomErrorResponses": [
            {
              "ErrorCode": 404,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html",
              "ErrorCachingMinTTL": 0
            },
            {
              "ErrorCode": 403,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html",
              "ErrorCachingMinTTL": 0
            }
          ],
          "ViewerCertificate": { "CloudFrontDefaultCertificate": true },
          "Logging": {
            "IncludeCookies": false,
            "Bucket": {
              "Fn::GetAtt": ["CloudFrontLoggingBucket", "DomainName"]
            },
            "Prefix": "frontend/"
          }
        }
      }
    },
    "HighErrorRateAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Condition": "IsProduction",
      "Properties": {
        "AlarmDescription": "High 4xx error rate on CloudFront",
        "MetricName": "4xxErrorRate",
        "Namespace": "AWS/CloudFront",
        "Statistic": "Average",
        "Period": 300,
        "EvaluationPeriods": 2,
        "Threshold": 5,
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": [
          {
            "Name": "DistributionId",
            "Value": { "Ref": "CloudFrontDistribution" }
          }
        ]
      }
    }
  },
  "Outputs": {
    "FrontendURL": {
      "Description": "Public frontend URL (CloudFront or S3 depending on environment)",
      "Value": {
        "Fn::If": [
          "IsProduction",
          { "Fn::Sub": "https://${CloudFrontDistribution.DomainName}" },
          {
            "Fn::Sub": "http://${FrontendBucket}.s3-website-${AWS::Region}.amazonaws.com"
          }
        ]
      }
    },
    "FrontendBucketName": {
      "Description": "Name of the S3 bucket",
      "Value": { "Ref": "FrontendBucket" }
    }
  }
}
