{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "API Gateway Resources for Minimalist TODO App",
  "Parameters": {
    "Environment": {
      "Type": "String",
      "Default": "dev",
      "AllowedValues": ["dev", "prod"],
      "Description": "Environment (dev or prod)"
    },
    "AppName": {
      "Type": "String",
      "Default": "minimalist-todo",
      "Description": "Application name used for resource naming"
    },
    "TableName": {
      "Type": "String",
      "Description": "Name of the DynamoDB table for TODOs"
    },
    "UserPoolId": {
      "Type": "String",
      "Description": "ID of the Cognito User Pool"
    },
    "UserPoolClientId": {
      "Type": "String",
      "Description": "ID of the Cognito User Pool Client"
    }
  },
  "Resources": {
    "TodoApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": {
          "Fn::Sub": "${AppName}-${Environment}-api"
        },
        "Description": "API for Minimalist TODO App",
        "EndpointConfiguration": {
          "Types": ["REGIONAL"]
        }
      }
    },
    "TodoAuthorizer": {
      "Type": "AWS::ApiGateway::Authorizer",
      "Properties": {
        "Name": "CognitoAuthorizer",
        "Type": "COGNITO_USER_POOLS",
        "IdentitySource": "method.request.header.Authorization",
        "RestApiId": {
          "Ref": "TodoApi"
        },
        "ProviderARNs": [
          {
            "Fn::Sub": "arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}"
          }
        ]
      }
    },
    "TodosResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "TodoApi"
        },
        "ParentId": {
          "Fn::GetAtt": ["TodoApi", "RootResourceId"]
        },
        "PathPart": "todos"
      }
    },
    "TodoIdResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {
          "Ref": "TodoApi"
        },
        "ParentId": {
          "Ref": "TodosResource"
        },
        "PathPart": "{todoId}"
      }
    },
    "ApiGatewayDynamoDBRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
        ],
        "Policies": [
          {
            "PolicyName": "DynamoDBAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem",
                    "dynamodb:Query",
                    "dynamodb:Scan"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}"
                    },
                    {
                      "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}/index/*"
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "GetTodosMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "TodoApi"
        },
        "ResourceId": {
          "Ref": "TodosResource"
        },
        "HttpMethod": "GET",
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "TodoAuthorizer"
        },
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:dynamodb:action/Query"
          },
          "Credentials": {
            "Fn::GetAtt": ["ApiGatewayDynamoDBRole", "Arn"]
          },
          "RequestTemplates": {
            "application/json": {
              "Fn::Sub": "{\"TableName\": \"${TableName}\", \"KeyConditionExpression\": \"userId = :userId\", \"ExpressionAttributeValues\": {\":userId\": {\"S\": \"$context.authorizer.claims.sub\"}}}"
            }
          },
          "IntegrationResponses": [
            {
              "StatusCode": 200,
              "ResponseTemplates": {
                "application/json": "#set($items = $input.path('$.Items'))\n{\n  \"todos\": [\n    #foreach($item in $items)\n      {\n        \"todoId\": $item.todoId.S,\n        \"text\": $item.text.S,\n        #if($item.completed.BOOL)\n          \"completed\": $item.completed.BOOL\n        #else\n          \"completed\": false\n        #end\n      }#if($foreach.hasNext),#end\n    #end\n  ]\n}"
              },
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          ]
        },
        "MethodResponses": [
          {
            "StatusCode": 200,
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "ResponseModels": {
              "application/json": "Empty"
            }
          }
        ]
      }
    },
    "CreateTodoMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "TodoApi"
        },
        "ResourceId": {
          "Ref": "TodosResource"
        },
        "HttpMethod": "POST",
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "TodoAuthorizer"
        },
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:dynamodb:action/PutItem"
          },
          "Credentials": {
            "Fn::GetAtt": ["ApiGatewayDynamoDBRole", "Arn"]
          },
          "RequestTemplates": {
            "application/json": {
              "Fn::Sub": "#set($todoId = $context.requestId)\n{\n  \"TableName\": \"${TableName}\",\n  \"Item\": {\n    \"userId\": {\"S\": \"$context.authorizer.claims.sub\"},\n    \"todoId\": {\"S\": \"$todoId\"},\n    \"text\": {\"S\": $input.json('$.text')},\n    \"completed\": {\"BOOL\": false}\n  }\n}"
            }
          },
          "IntegrationResponses": [
            {
              "StatusCode": 201,
              "ResponseTemplates": {
                "application/json": "{\n  \"todoId\": \"$context.requestId\",\n  \"text\": $input.json('$.text'),\n  \"completed\": false\n}"
              },
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          ]
        },
        "MethodResponses": [
          {
            "StatusCode": 201,
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "ResponseModels": {
              "application/json": "Empty"
            }
          }
        ]
      }
    },
    "UpdateTodoMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "TodoApi"
        },
        "ResourceId": {
          "Ref": "TodoIdResource"
        },
        "HttpMethod": "PUT",
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "TodoAuthorizer"
        },
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:dynamodb:action/UpdateItem"
          },
          "Credentials": {
            "Fn::GetAtt": ["ApiGatewayDynamoDBRole", "Arn"]
          },
          "RequestTemplates": {
            "application/json": {
              "Fn::Sub": "{\n  \"TableName\": \"${TableName}\",\n  \"Key\": {\n    \"userId\": {\"S\": \"$context.authorizer.claims.sub\"},\n    \"todoId\": {\"S\": \"$input.params('todoId')\"}\n  },\n  \"UpdateExpression\": \"SET #text = :text, #completed = :completed\",\n  \"ExpressionAttributeNames\": {\n    \"#text\": \"text\",\n    \"#completed\": \"completed\"\n  },\n  \"ExpressionAttributeValues\": {\n    \":text\": {\"S\": $input.json('$.text')},\n    \":completed\": {\"BOOL\": $input.json('$.completed')}\n  },\n  \"ReturnValues\": \"ALL_NEW\"\n}"
            }
          },
          "IntegrationResponses": [
            {
              "StatusCode": 200,
              "ResponseTemplates": {
                "application/json": "#set($item = $input.path('$.Attributes'))\n{\n  \"todoId\": \"$item.todoId.S\",\n  \"text\": \"$item.text.S\",\n  \"completed\": $item.completed.BOOL\n}"
              },
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          ]
        },
        "MethodResponses": [
          {
            "StatusCode": 200,
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "ResponseModels": {
              "application/json": "Empty"
            }
          }
        ]
      }
    },
    "DeleteTodoMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "TodoApi"
        },
        "ResourceId": {
          "Ref": "TodoIdResource"
        },
        "HttpMethod": "DELETE",
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Ref": "TodoAuthorizer"
        },
        "Integration": {
          "Type": "AWS",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:dynamodb:action/DeleteItem"
          },
          "Credentials": {
            "Fn::GetAtt": ["ApiGatewayDynamoDBRole", "Arn"]
          },
          "RequestTemplates": {
            "application/json": {
              "Fn::Sub": "{\n  \"TableName\": \"${TableName}\",\n  \"Key\": {\n    \"userId\": {\"S\": \"$context.authorizer.claims.sub\"},\n    \"todoId\": {\"S\": \"$input.params('todoId')\"}\n  }\n}"
            }
          },
          "IntegrationResponses": [
            {
              "StatusCode": 204,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          ]
        },
        "MethodResponses": [
          {
            "StatusCode": 204,
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "ResponseModels": {
              "application/json": "Empty"
            }
          }
        ]
      }
    },
    "CorsOptionsMethodTodos": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "TodoApi"
        },
        "ResourceId": {
          "Ref": "TodosResource"
        },
        "HttpMethod": "OPTIONS",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "MOCK",
          "IntegrationResponses": [
            {
              "StatusCode": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": "{}"
              }
            }
          ],
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          }
        },
        "MethodResponses": [
          {
            "StatusCode": 200,
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "ResponseModels": {
              "application/json": "Empty"
            }
          }
        ]
      }
    },
    "CorsOptionsMethodTodoId": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {
          "Ref": "TodoApi"
        },
        "ResourceId": {
          "Ref": "TodoIdResource"
        },
        "HttpMethod": "OPTIONS",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "MOCK",
          "IntegrationResponses": [
            {
              "StatusCode": 200,
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "ResponseTemplates": {
                "application/json": "{}"
              }
            }
          ],
          "RequestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          }
        },
        "MethodResponses": [
          {
            "StatusCode": 200,
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "ResponseModels": {
              "application/json": "Empty"
            }
          }
        ]
      }
    },
    "ApiDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "DependsOn": [
        "GetTodosMethod",
        "CreateTodoMethod",
        "UpdateTodoMethod",
        "DeleteTodoMethod",
        "CorsOptionsMethodTodos",
        "CorsOptionsMethodTodoId"
      ],
      "Properties": {
        "RestApiId": {
          "Ref": "TodoApi"
        },
        "StageName": "dummy"
      }
    },
    "ApiStage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {
          "Ref": "ApiDeployment"
        },
        "RestApiId": {
          "Ref": "TodoApi"
        },
        "StageName": {
          "Ref": "Environment"
        },
        "MethodSettings": [
          {
            "ResourcePath": "/*",
            "HttpMethod": "*",
            "MetricsEnabled": true,
            "DataTraceEnabled": true,
            "LoggingLevel": "INFO"
          }
        ]
      }
    }
  },
  "Outputs": {
    "ApiEndpoint": {
      "Description": "URL of the API Gateway endpoint",
      "Value": {
        "Fn::Sub": "https://${TodoApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-ApiEndpoint"
        }
      }
    },
    "ApiId": {
      "Description": "ID of the API Gateway",
      "Value": {
        "Ref": "TodoApi"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-ApiId"
        }
      }
    }
  }
}
