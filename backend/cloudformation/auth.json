{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Cognito User Pool with Passkey Support for Minimalist TODO App",
  "Parameters": {
    "Environment": {
      "Type": "String",
      "Default": "dev",
      "AllowedValues": ["dev", "prod"],
      "Description": "Environment (dev or prod)"
    },
    "AppName": {
      "Type": "String",
      "Default": "minimalist-todo",
      "Description": "Application name used for resource naming"
    },
    "LocalCallbackUrl": {
      "Type": "String",
      "Description": "Local callback URL for development",
      "Default": "http://localhost:8080/callback.html"
    },
    "CloudFrontCallbackUrl": {
      "Type": "String",
      "Description": "CloudFront callback URL for production",
      "Default": ""
    },
    "LogoutUrl": {
      "Type": "String",
      "Description": "Logout URL",
      "Default": "http://localhost:8080/index.html"
    }
  },
  "Conditions": {
    "HasCloudFrontUrl": {
      "Fn::Not": [
        {
          "Fn::Equals": [{ "Ref": "CloudFrontCallbackUrl" }, ""]
        }
      ]
    }
  },
  "Resources": {
    "CognitoUserPool": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "UserPoolName": {
          "Fn::Sub": "${AppName}-${Environment}-user-pool"
        },
        "UsernameAttributes": ["email"],
        "AutoVerifiedAttributes": ["email"],
        "EmailVerificationMessage": "Your verification code is {####}",
        "EmailVerificationSubject": "Verify your email for our Minimalist TODO App",
        "Schema": [
          {
            "Name": "email",
            "AttributeDataType": "String",
            "Mutable": true,
            "Required": true
          },
          {
            "Name": "name",
            "AttributeDataType": "String",
            "Mutable": true,
            "Required": false
          }
        ],
        "AdminCreateUserConfig": {
          "AllowAdminCreateUserOnly": false
        },
        "PasswordPolicy": {
          "MinimumLength": 8,
          "RequireLowercase": true,
          "RequireNumbers": true,
          "RequireSymbols": true,
          "RequireUppercase": true
        }
      }
    },
    "CognitoUserPoolClient": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "UserPoolId": {
          "Ref": "CognitoUserPool"
        },
        "ClientName": {
          "Fn::Sub": "${AppName}-${Environment}-client"
        },
        "GenerateSecret": false,
        "AllowedOAuthFlows": ["implicit"],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": ["email", "openid", "profile"],
        "CallbackURLs": {
          "Fn::If": [
            "HasCloudFrontUrl",
            [{ "Ref": "LocalCallbackUrl" }, { "Ref": "CloudFrontCallbackUrl" }],
            [{ "Ref": "LocalCallbackUrl" }]
          ]
        },
        "LogoutURLs": [
          {
            "Ref": "LogoutUrl"
          }
        ],
        "SupportedIdentityProviders": ["COGNITO"],
        "AuthSessionValidity": 15,
        "EnableTokenRevocation": true,
        "PreventUserExistenceErrors": "ENABLED"
      }
    },
    "CognitoUserPoolDomain": {
      "Type": "AWS::Cognito::UserPoolDomain",
      "Properties": {
        "Domain": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AppName"
              },
              {
                "Ref": "Environment"
              },
              {
                "Fn::Select": [
                  0,
                  {
                    "Fn::Split": [
                      "-",
                      {
                        "Fn::Select": [
                          2,
                          {
                            "Fn::Split": [
                              "/",
                              {
                                "Ref": "AWS::StackId"
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          ]
        },
        "UserPoolId": {
          "Ref": "CognitoUserPool"
        }
      }
    }
  },
  "Outputs": {
    "CognitoUserPoolId": {
      "Description": "ID of the Cognito User Pool",
      "Value": {
        "Ref": "CognitoUserPool"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-UserPoolId"
        }
      }
    },
    "CognitoUserPoolClientId": {
      "Description": "ID of the Cognito User Pool Client",
      "Value": {
        "Ref": "CognitoUserPoolClient"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-UserPoolClientId"
        }
      }
    },
    "CognitoUserPoolDomain": {
      "Description": "Domain of the Cognito User Pool",
      "Value": {
        "Fn::Join": [
          ".",
          [
            {
              "Fn::GetAtt": ["CognitoUserPoolDomain", "Domain"]
            },
            "auth",
            {
              "Ref": "AWS::Region"
            },
            "amazoncognito.com"
          ]
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-UserPoolDomain"
        }
      }
    },
    "HostedUISignInUrl": {
      "Description": "URL for the hosted UI sign-in page",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Fn::GetAtt": ["CognitoUserPoolDomain", "Domain"]
            },
            ".auth.",
            {
              "Ref": "AWS::Region"
            },
            ".amazoncognito.com/login?client_id=",
            {
              "Ref": "CognitoUserPoolClient"
            },
            "&response_type=token&scope=email+openid+profile&redirect_uri=",
            {
              "Ref": "LocalCallbackUrl"
            }
          ]
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-HostedUISignInUrl"
        }
      }
    },
    "CallbackURLs": {
      "Description": "Configured callback URLs",
      "Value": {
        "Fn::Join": [
          ", ",
          {
            "Fn::If": [
              "HasCloudFrontUrl",
              [
                { "Ref": "LocalCallbackUrl" },
                { "Ref": "CloudFrontCallbackUrl" }
              ],
              [{ "Ref": "LocalCallbackUrl" }]
            ]
          }
        ]
      }
    }
  }
}
